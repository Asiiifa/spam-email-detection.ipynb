# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vqu57un0K22ZWckQFyepWzyTohww-A-X
"""

import pandas as pd

import seaborn as sns

import matplotlib.pyplot as plt

df = pd.read_csv('spam.csv', encoding= "latin 1")

df

df.columns

df.drop(['Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4'], axis=1, inplace=True)

df

df['v1'].value_counts()

label = df['v1'].value_counts().index
values = df['v1'].value_counts().values

plt.pie(values, labels=label, autopct='%1.1f%%')
plt.show()

sns.countplot(df['v1'])

from sklearn.feature_extraction.text import CountVectorizer

vectorizer = CountVectorizer()

x= vectorizer.fit_transform(df['v2'])

x

x.shape

from imblearn.over_sampling import SMOTE

sm = SMOTE(random_state=42)

y= df['v1']

x_res, y_res = sm.fit_resample(x,y)

x_res, y_res = sm.fit_resample(x,y)

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

y_res = le.fit_transform(y_res)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x_res, y_res, test_size=0.2, random_state=42)

from sklearn.naive_bayes import MultinomialNB
clf = MultinomialNB()
clf.fit(x_train, y_train)

y_pred=clf.predict(x_test)

y_pred

from sklearn.metrics import accuracy_score

accuracy_score(y_test, y_pred)

from sklearn.metrics import confusion_matrix,classification_report
confusion_matrix(y_test, y_pred)

sns.heatmap(confusion_matrix(y_test, y_pred), annot=True)

print(classification_report(y_test, y_pred))

cm = confusion_matrix(y_test, y_pred)

sns.heatmap(cm, annot=True)

